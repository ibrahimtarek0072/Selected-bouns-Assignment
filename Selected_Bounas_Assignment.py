# -*- coding: utf-8 -*-
"""selected project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1C4uEXd_Ae9dJjQaRin4zxP0cDF2VsZE4
IDS: 20190007	20190129	20190189
"""

# Importing libraries
import numpy as np
import matplotlib.pyplot as plt
import cv2
from google.colab.patches import cv2_imshow

# Name of testing image
image = 'test_sample.jpg'

# Path of our caffemodel, prototxt, and numpy files
prototxt = "/content/colorization_deploy_v2.prototxt"
caffe_model = "/content/colorization_release_v2.caffemodel"
pts_npy = "/content/pts_in_hull.npy"

test_image =  'download.jpeg'

# Loading our model
net = cv2.dnn.readNetFromCaffe(prototxt, caffe_model)
pts = np.load(pts_npy)
 
layer1 = net.getLayerId("class8_ab")
print(layer1)
layer2 = net.getLayerId("conv8_313_rh")
print(layer2)
pts = pts.transpose().reshape(2, 313, 1, 1)
net.getLayer(layer1).blobs = [pts.astype("float32")]
net.getLayer(layer2).blobs = [np.full([1, 313], 2.606, dtype="float32")]

# Converting the image into RGB and plotting it
# Read image from the path
test_image = cv2.imread(test_image)


normalized = test_image.astype("float32") / 255.0

lab_image = cv2.cvtColor(normalized, cv2.COLOR_RGB2LAB)

resized = cv2.resize(lab_image, (224, 224))

L = cv2.split(resized)[0]
L -= 50   


net.setInput(cv2.dnn.blobFromImage(L))

ab = net.forward()[0, :, :, :].transpose((1, 2, 0))

ab = cv2.resize(ab, (test_image.shape[1], test_image.shape[0]))


L = cv2.split(lab_image)[0]

LAB_colored = np.concatenate((L[:, :, np.newaxis], ab), axis=2)


RGB_colored = cv2.cvtColor(LAB_colored,cv2.COLOR_LAB2RGB)
RGB_colored=(RGB_colored*255.0).astype('uint8')



plt.imshow(test_image)
plt.title('black and white')
plt.show()
plt.imshow(RGB_colored)
plt.title('colorized image')
plt.show()